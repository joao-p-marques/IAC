.eqv PRINT_STR, 4
.eqv READ_INT, 5
.eqv EXIT, 10
.eqv PRINT_CHAR, 11
.eqv PRINT_INT , 1
.eqv SIZE, 6

.data
lista : .word 0 : SIZE
msg : .asciiz "Insira 6 números: \n"
msg2 : .asciiz "Números inseridos ordenados: "
#$t0 --- int i
#$t1 --- int aux
#$t2 --- int houveTroca

.text
main :  la $a0, msg
	li $v0, PRINT_STR
	syscall
	
	move $t0, $0 # i = 0
	move $t1, $0 # aux = 0
	addi $t2, $0, 1 # houveTroca = 1
	la $a1, lista # lista adress in $a1
	
   for: bge $t0, 6, efor
   	
   	sll $t1, $t0, 2 # 4 * i = $t1 --- Adress to add to the list adress
   	addu $t1, $a1, $t1 # adress to acess --- listAdress + 4*i
   
	li $v0, READ_INT
	syscall
	sw $v0, 0($t1) # load read value into lista[i]
	
	addi $t0, $t0, 1 # i++
	
	j for
	
  efor: move $t0, $0 # i = 0
	
 while: beq $t2, 0, ewhile #exit loop if houveTroca=false
 	addi $t2, $0, 0 # houveTroca = 0
 	
 	for2: bge $t0, 6, efor2
   	
   	     sll $t3, $t0, 2 # 4 * i = $t3 --- Adress to add to the list adress
   	     addu $t3, $a1, $t3 # adress to acess --- listAdress + 4*i
   	     addiu $t4, $t3, 4 # 4 * (i+1) = $t4 --- Adress to add to the list adress
   	     #addu $t4, $a1, $t4 # adress to acess --- listAdress + 4*(i+1)
   
	     if : ble $t3, $t4, eif #if lista[i]<=lista[i+1] exit if
	     	  addi $t1, $t3, 0 #aux = lista[i]
	     	  addi $t3, $t4, 0 #lista[i] = lista[i+1]
	     	  addi $t4, $t1, 0 #lista[i+1] = aux
	     	  addi $t2, $0, 1 # houveTroca = 1
	     eif: 	     	  
	
	     addi $t0, $t0, 1 # i++
	
	     j for2
	
       efor2: move $t0, $0 # i = 0

ewhile: 
 		
  	
  for3: bge $t0, 6, efor3
   	
   	sll $t1, $t0, 2 # 4 * i = $t1 --- Adress to add to the list adress
   	addu $t1, $a1, $t1 # adress to acess --- listAdress + 4*i
   
   	lw $a0, 0($t1) # load lista[i] andress into $a0 to print
	li $v0, PRINT_INT
	syscall
	
	li $v0, PRINT_CHAR
	li $a0, ',' # print ',' to separate values
	syscall
	
	addi $t0, $t0, 1 # i++
	
	j for3
	
  efor3: li $v0, EXIT
  	 syscall